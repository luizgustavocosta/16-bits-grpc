//Main idea from github grpc
plugins {
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
    id 'idea'
    id 'java'
}

group = 'com.costa.luiz.grpc'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass = 'com.costa.luiz.example.Server'
}

def grpcVersion = '1.58.0'
def protobufVersion = '3.24.0'
def protocVersion = protobufVersion
def sl4jVersion = '2.0.9'
def junit5Version = '5.7.1'

dependencies {
    //implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    // Allow support the reflection API
    implementation "io.grpc:grpc-services:${grpcVersion}"

    compileOnly "io.grpc:grpc-services:${grpcVersion}"
    //Used by generated code
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    //Netty to be used by Server class
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    //Logging
//    implementation "org.slf4j:slf4j-api:${sl4jVersion}"
    implementation "org.slf4j:slf4j-simple:${sl4jVersion}"

    //Testing
    testImplementation "org.junit.jupiter:junit-jupiter:${junit5Version}"
//    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
//    testImplementation "io.grpc.grpc-testing: ${grpcVersion}"
    testImplementation group: 'io.grpc', name: 'grpc-testing', version: '1.58.0'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
}